
        [TestMethod]
        public void BasicCaseLongOnLeft() {

            List<string> fragments = new List<string> { "1234567", "56789" };

            var result = CommonString.FindCommonString(fragments.ToList());

            Assert.IsTrue(result == "123456789");

        }



        [TestMethod]

        public void NonOverlappingAreConcatenated() {

            List<string> fragments = new List<string> { "1234", "56789" };

            var result = CommonString.FindCommonString(fragments.ToList());

            Assert.IsTrue(result == "123456789");

        }



        [TestMethod]

        public void BasicCaseLongOnRight() {

            List<string> fragments = new List<string> { "1234", "23456789" };

            var result = CommonString.FindCommonString(fragments.ToList());

            Assert.IsTrue(result == "123456789");

        }



        [TestMethod]

        public void SubstringIsIgnored() {

            List<string> fragments = new List<string> { "1234", "23456789", "456" };

            var result = CommonString.FindCommonString(fragments.ToList());

            Assert.IsTrue(result == "123456789");

        }

        [TestMethod]

        public void UseBestStringMatchNotFirstMatch() {

            List<string> fragments = new List<string> { "abcde", "efghi", "cdewooe" };

            var result = CommonString.FindCommonString(fragments.ToList());

            Assert.IsTrue(result == "abcdewooefghi");

        }

        [TestMethod]

        public void TestProblemExample() {

            List<string> fragments = new List<string> { "all is well", "ell that en", "hat end", "t ends well" };

            var result = CommonString.FindCommonString(fragments.ToList());

            Assert.IsTrue(result == "all is well that ends well");

        }



        [TestMethod]

        public void TestGitHubSample1() {

            var fragments = "O draconia;conian devil! Oh la;h lame sa;saint!".Split(';').ToList();

            var result = CommonString.FindCommonString(fragments.ToList());

            Assert.IsTrue(result == "O draconian devil! Oh lame saint!");

        }



        [TestMethod]

        public void TestGitHubSample2() {

            var fragments = "m quaerat voluptatem.;pora incidunt ut labore et d;, consectetur, adipisci velit;olore magnam aliqua;idunt ut labore et dolore magn;uptatem.;i dolorem ipsum qu;iquam quaerat vol;psum quia dolor sit amet, consectetur, a;ia dolor sit amet, conse;squam est, qui do;Neque porro quisquam est, qu;aerat voluptatem.;m eius modi tem;Neque porro qui;, sed quia non numquam ei;lorem ipsum quia dolor sit amet;ctetur, adipisci velit, sed quia non numq;unt ut labore et dolore magnam aliquam qu;dipisci velit, sed quia non numqua;us modi tempora incid;Neque porro quisquam est, qui dolorem i;uam eius modi tem;pora inc;am al"

                .Split(';').Select(s => s.TrimStart()).ToList();

            var result = CommonString.FindCommonString(fragments.ToList());

            Assert.IsTrue(result == "Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem.");

        }



        [TestMethod]

        public void TestGitHubSample2Reversed() {

            var fragments = "m quaerat voluptatem.;pora incidunt ut labore et d;, consectetur, adipisci velit;olore magnam aliqua;idunt ut labore et dolore magn;uptatem.;i dolorem ipsum qu;iquam quaerat vol;psum quia dolor sit amet, consectetur, a;ia dolor sit amet, conse;squam est, qui do;Neque porro quisquam est, qu;aerat voluptatem.;m eius modi tem;Neque porro qui;, sed quia non numquam ei;lorem ipsum quia dolor sit amet;ctetur, adipisci velit, sed quia non numq;unt ut labore et dolore magnam aliquam qu;dipisci velit, sed quia non numqua;us modi tempora incid;Neque porro quisquam est, qui dolorem i;uam eius modi tem;pora inc;am al"

                .Split(';').Select(s => s.TrimStart()).Reverse().ToList();

            var result = CommonString.FindCommonString(fragments.ToList());

            Assert.IsTrue(result == "Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem.");

        }
